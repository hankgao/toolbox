// inc - Issue New Cryptocurrency

package main

import (
	"fmt"
	"time"

	"gitee.com/hankgaosh/toolbox/src/skytb"
	"github.com/skycoin/skycoin/src/cipher"
)

const version = "0.1.1"

func main() {
	// TODO:
	// Read parameters
	//         Coin Name:
	//       Coin symbol:
	// GenesisCoinVolume:
	//              Port:
	//  WebInterfacePort:
	//  RPCInterfacePort:

	fmt.Println("This is generated by magicstring tool version ", version)

	fmt.Printf(`
# Configurations
		
## Core configurations

| Item                  | Value           |
|-----------------------|-----------------|
`)

	publicK, privateK := cipher.GenerateKeyPair()

	BlockchainPubkeyStr := publicK.Hex()
	BlockchainSeckeyStr := privateK.Hex()

	fmt.Printf("|%23s| %s\n", "Coin name", "")
	fmt.Printf("|%23s| %s\n", "Coin symbol", "")

	fmt.Printf("|%23s| %s\n", "BlockchainPubkeyStr", BlockchainPubkeyStr)
	fmt.Printf("|%23s| %s\n", "BlockchainSeckeyStr", BlockchainSeckeyStr)

	seed := skytb.GenerateSeed()
	GenesisAddressStr, theKey := skytb.GetFirstAddress(seed)
	fmt.Printf("|%23s| %s\n", "GenesisAddressStr", GenesisAddressStr)
	fmt.Printf("|%23s| %s\n", "PrivateKey", theKey)
	fmt.Printf("|%23s| %s\n", "Seed", seed)

	fmt.Printf("|%23s| %s\n", "GenesisSignatureStr", "")

	now := time.Now()
	GenesisTimestamp := now.Unix()
	now.Format(time.RFC822)
	fmt.Printf("|%23s| %d\n", "GenesisTimestamp", GenesisTimestamp)
	fmt.Printf("|%23s| %s\n", "=>", now.String())

	fmt.Printf("|%23s| %s\n", "GenesisCoinVolume", "300e12")
	fmt.Printf("|%23s| %s\n", "PeerListURL", "")

	fmt.Printf("|%23s| %s\n", "Port", "")
	fmt.Printf("|%23s| %s\n", "WebInterfacePort", "")
	fmt.Printf("|%23s| %s\n", "RPCInterfacePort", "")
	fmt.Printf("|%23s| %s\n", "GenesisUxID", "")
	fmt.Printf("|%23s| %s\n", "Node 1", "")
	fmt.Printf("|%23s| %s\n", "Node 2", "")
	fmt.Printf("|%23s| %s\n", "Node 3", "")
	fmt.Printf("|%23s| %s\n", "Node 4", "")
	fmt.Printf("|%23s| %s\n", "Node 5", "")

	fmt.Println()
	fmt.Println("# Distribution addresses")
	fmt.Println()

	// List 100 addresseed used for initial distribution
	// TODO: write to a csv file
	addrs := make([]string, 100)
	for i := 0; i < 100; i++ {
		seed := skytb.GenerateSeed()
		address, _ := skytb.GetFirstAddress(seed)
		fmt.Printf("- %03d %40s %s\n", i+1, address, seed)

		addrs = append(addrs, address)
	}

	fmt.Println()
	fmt.Println("# Deploy nodes")
	fmt.Println("scp -P 28001 newcoin-0.23.0-bin-linux-x64.tar.gz root@23.105.204.56:/root")

	fmt.Println()
	fmt.Println("# Start master node")
	fmt.Println("./newcoin –master=true -master-secret-key=", BlockchainSeckeyStr, " -launch-browser=false –download-peerlist=false")

	fmt.Println()
	fmt.Println("# Start normal node")
	fmt.Println("./newcoin -launch-browser=false")

}
